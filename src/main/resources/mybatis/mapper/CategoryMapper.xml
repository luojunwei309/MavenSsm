<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljw.ssm.mapper.CategoryMapper">
  <resultMap id="BaseResultMap" type="com.ljw.ssm.entity.Category">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pictname" jdbcType="VARCHAR" property="pictname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, pictname
  </sql>
  <select id="selectByExample" parameterType="com.ljw.ssm.entity.CategoryExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <!-- 	// // 查询分类，并整理
	List<Category> selectByKeyword(String keyword); -->
	<select id="selectByKeyword" resultMap="BaseResultMap">
	  select 
	  <include refid="Base_Column_List"/>
	  from category where name like concat("%",#{keyword},"%")
	</select>
	
  
  <!--      保存分类
	void saveCategory(String pictname, String name); -->
	<insert id="saveCategory">
	  insert into category(name,pictname) value(#{name},#{pictname})
	</insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ljw.ssm.entity.Category">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      JDBC
    </selectKey>
    insert into category (id, name, pictname
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pictname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ljw.ssm.entity.Category">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      JDBC
    </selectKey>
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="pictname != null">
        pictname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pictname != null">
        #{pictname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljw.ssm.entity.Category">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update category
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pictname != null">
        pictname = #{pictname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljw.ssm.entity.Category">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update category
    set name = #{name,jdbcType=VARCHAR},
      pictname = #{pictname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 	void updatebyKey(Integer id,String name, String pictname); -->
  <update id="updatebyKey">
   update category
   <trim prefix="set" suffixOverrides=",">
     <if test="name != null and ''!=name">
     name=#{name},
   </if>
   
   <if test="pictname != null and ''!=pictname">
    pictname=#{pictname},
   </if>
   </trim>
      where id=#{id}
  </update>
  
</mapper>