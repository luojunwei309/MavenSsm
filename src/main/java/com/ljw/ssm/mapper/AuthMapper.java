package com.ljw.ssm.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.ljw.ssm.entity.Auth;
import com.ljw.ssm.entity.AuthExample;

public interface AuthMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int countByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int deleteByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int insert(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int insertSelective(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    List<Auth> selectByExample(AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    Auth selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int updateByExampleSelective(@Param("record") Auth record, @Param("example") AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int updateByExample(@Param("record") Auth record, @Param("example") AuthExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int updateByPrimaryKeySelective(Auth record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_auth
     *
     * @mbggenerated Tue Jul 07 11:19:21 CST 2020
     */
    int updateByPrimaryKey(Auth record);
    /**
     * 查找角色和权限的关联
     * @param roleId
     * @return
     */
	List<Integer> selectaIdRid(Integer roleId);

	/**
	 * 删除旧的角色和权限的关系
	 * @param roleId
	 */
	void deleteOld(Integer roleId);
    /**
     * 插入新的角色和权限关系
     * @param roleId
     * @param authIdArray
     */
	void insertNew(@Param("roleId")Integer roleId, @Param("authIdArray")List<Integer> authIdArray);

	/**
	 * 根据用户id查找权限跟用户的名字
	 * @param adminId
	 * @return
	 */
	List<String> selectAssignedAuthNameByAdminId(Integer adminId);

	/**
	 * 查询角色Id查找全部权限
	 * @return
	 */
	List<Integer> selectRidAuth(Integer roleId);

	/**
	 * 根据adminId查找权限(auth)
	 */
	List<String> selectAuthByAdminId(Integer adminId);
}